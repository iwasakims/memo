- name: rm zookeeper home
  file: path={{ zookeeper_home }} state=absent
  when: cleanup and packaging == "tarball"

- name: download zookeeper tarball
  copy:
    src: "{{ files_dir }}/{{ zookeeper_tarball }}"
    dest: "{{ home }}/{{ zookeeper_tarball }}"
    force: no
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_user }}"
  when: packaging == "tarball"

- name: extract zookeeper tarball
  unarchive: 
    src: "{{ home }}/{{ zookeeper_tarball }}"
    dest: "{{ home }}"
    creates: "{{ zookeeper_home }}"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_user }}"
  when: packaging == "tarball"

- name: remove zookeeper-package
  package: name=zookeeper state=present state=absent
  when: cleanup and packaging == "rpm"

- name: install zookeeper-package
  package: name=zookeeper state=present
  when: packaging == "rpm"

- name: create zookeeper default file
  template:
    src: "zookeeper"
    dest: "/etc/default/zookeeper"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_user }}"
  when: packaging == "rpm"

- name: create zookeeper cfg file
  template:
    src: "zoo.cfg"
    dest: "{{ zookeeper_confdir }}/zoo.cfg"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_user }}"

- name: rm zookeeper data directory
  file: path={{ zookeeper_datadir }} state=absent
  when: cleanup

- name: create zookeeper data directory
  file:
    path: "{{ zookeeper_datadir }}"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_user }}"
    state: directory

- name: create zookeeper myid file
  template:
    src: "myid"
    dest: "{{ zookeeper_datadir }}/myid"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_user }}"
